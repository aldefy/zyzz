namespace message;

enum InputEncoding : byte {Opus = 1, PCM, AAC}
enum ResponseStatus : byte {OK = 1, NoStream, NotAllowed, Error}
enum StreamStatus : byte {CREATED = 0, STREAMING, STOPPED, ERROR}

table StreamSubscribe {
    status:StreamStatus = CREATED;
}

table StreamUnSubscribe {
}

table StreamStatus {
    status:StreamStatus = CREATED;
}

table StreamBroadCast {
    encoding:InputEncoding = Opus;
}

table StreamPause {

}

table StreamStop {

}

table StreamFrame {
    frame_size:ubyte;
    sample_rate:uint;
    channels:ubyte;
    frame:[ubyte];
}

table StreamComment {
    user_name:string;
    text:string;
}

table StreamResponse {
    status:ResponseStatus = OK;
}


union Message {
    StreamBroadCast,
    StreamPause,
    StreamStop,
    StreamFrame,
    StreamComment,
    StreamSubscribe,
    StreamResponse,
    StreamStatus,
    StreamUnSubscribe
}

table StreamMessage {
    event_id:string;
    stream_id:string;
    message:Message;
    timestamp:long;
}

root_type StreamMessage;


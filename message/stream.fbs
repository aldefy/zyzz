namespace message;

enum InputEncoding : byte {Opus = 1, PCM, AAC}
enum ResponseStatus : byte {OK = 1, NoStream, NotAllowed, Error}
enum StreamStatus : byte {CREATED = 0, STREAMING, STOPPED, ERROR}

table Subscribe {
}

table UnSubscribe {
}

table Status {
    status:StreamStatus = CREATED;
    subscribe_count:int;
}

table BroadCast {
    encoding:InputEncoding = Opus;
}

table Pause {

}

table Stop {

}

table Frame {
    frame_size:ubyte;
    sample_rate:uint;
    channels:ubyte;
    frame:[ubyte];
}

table Comment {
    user_name:string;
    text:string;
}

table Response {
    status:ResponseStatus = OK;
}


union Message {
    BroadCast,
    Pause,
    Stop,
    Frame,
    Comment,
    Subscribe,
    Response,
    Status,
    UnSubscribe
}

table StreamMessage {
    event_id:string;
    stream_id:string;
    message:Message;
    timestamp:long;
}

root_type StreamMessage;

